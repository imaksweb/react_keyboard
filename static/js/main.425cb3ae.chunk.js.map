{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyPressHandler","e","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAYaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,mBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,mBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,mCAE+BA,EAF/B,KACG,kCAxBd,GAAyBU,IAAMC,W,MCP/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.425cb3ae.chunk.js","sourcesContent":["import React from 'react';\n\nexport const App2: React.FC = () => (\n  <div className=\"App\">\n    <p className=\"App__message\">The last pressed key is [Enter]</p>\n  </div>\n);\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPressHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPressHandler);\n  }\n\n  keyPressHandler = (e: KeyboardEvent) => {\n    this.setState({ pressedKey: e.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressedKey\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}